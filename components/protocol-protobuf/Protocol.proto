/* Copyright (C) 2014-2017 Alexander Shishenko <alex@shishenko.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * In addition, as a special exception, the copyright holders give
 * permission to link the code of portions of this program with the
 * OpenSSL library under certain conditions as described in each
 * individual source file, and distribute linked combinations
 * including the two.
 * You must obey the GNU General Public License in all respects
 * for all of the code used other than OpenSSL.  If you modify
 * file(s) with this exception, you may extend this exception to your
 * version of the file(s), but you are not obligated to do so.  If you
 * do not wish to do so, delete this exception statement from your
 * version.  If you delete this exception statement from all source
 * files in the program, then also delete it here.
 */
syntax = "proto3";
package librevault.protocol;

message Handshake_ {
	bytes auth_token = 1;
	string device_name = 2;
	string user_agent = 3;
	uint32 dht_port = 4;    // Valid values 0-65535
	repeated string extensions = 255;
}

message SnapshotUpdate {
	bytes snapshot = 1;
    bytes signature = 2;
    repeated bytes inodes = 3;
    repeated bytes bitfields = 4;
}

message BlockRequest_ {
	bytes ct_hash = 1;
	uint32 offset = 2;
	uint32 length = 3;
}

message BlockResponse_ {
	bytes ct_hash = 1;
	uint32 offset = 2;
	bytes content = 3;
}

message BlockCancel_ {
	bytes ct_hash = 1;
	uint32 offset = 2;
	uint32 length = 3;
}
